@model PF_Pach_OS.Models.CreateViewModel

@{
    ViewData["Title"] = "Create";
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

}
<link href="~/css/productos.css" rel="stylesheet" />

<div class="crear-productos">
    <form method="post" novalidate >
        <div class="registrar-productos d-flex justify-content-between">

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Producto.IdProducto" value="@ViewBag.IdProducto"/>
                    


                    <div>
                        <label class="label-campo tamano-label">
                            <span class="nombre-campo">Producto</span>
                            @if (ViewBag.ProductoActivo != null)
                            {
                                <input class="input-campo" asp-for="Producto.NomProducto" value="@ViewBag.ProductoActivo.NomProducto" required title=" " />
                            }
                            else
                            {
                                <input class="input-campo" asp-for="Producto.NomProducto" required title=" " />
                            }
                        <div class="invalid-feedback">
                            

                        </div>
                        <div class="valid-feedback">
                            ¡Todo bien!
                        </div>
                        </label>
                        <span asp-validation-for="Producto.NomProducto" class="text-danger"></span>
                    </div>

                    <div>
                        <label class="label-campo">
                            <span class="nombre-campo">Precio</span>
                             @if (ViewBag.ProductoActivo != null)
                            {
                             <input class="input-campo" asp-for="Producto.PrecioVenta" value="@ViewBag.ProductoActivo.PrecioVenta" required title=" " />
                            }
                            else
                            {
                                <input class="input-campo" asp-for="Producto.PrecioVenta" required title=" " />
                            }
                            <div class="invalid-feedback">
                               
                            </div>
                            <div class="valid-feedback">
                                ¡Todo bien!
                            </div>
                        </label>
                        <span asp-validation-for="Producto.PrecioVenta" class="text-danger"></span>
                    </div>

                <div>
                    <label class="label-campo tamano-label">
                        <span class="nombre-campo">Categoria</span>
                        <select class="input-campo select-campo" id="Producto_IdCategoria" asp-for="Producto.IdCategoria" asp-items="ViewBag.IdCategoria" required title=" ">
                        @if (ViewBag.SelectC != null)
                            {
                                
                                <option value="@ViewBag.SelectCID">@ViewBag.SelectC</option>
                            }
                            else
                            {
                                <option></option>
                            }
                            
                        </select>
                        <div class="invalid-feedback"></div>
                        <div class="valid-feedback">¡Todo bien!</div>
                    </label>
                </div>

                <div id="Tamano_Oculto" class="d-none">
                        <label class="label-campo">
                            <span class="nombre-campo">Tamaño</span>
                            <select class ="input-campo select-campo" asp-for="Producto.IdTamano" asp-items="ViewBag.IdTamano">
                        @if (ViewBag.SelectT != null)
                                {

                                    <option value="@ViewBag.SelectTID">@ViewBag.SelectT</option>
                                }
                                else
                                {
                                    <option></option>
                                }
                            
                            </select>
                            <div class="invalid-feedback">
                                Selecione un tamaño por favor .
                            </div>
                            <div class="valid-feedback">
                                ¡Todo bien!
                            </div>
                        </label>
                </div>  
            
        </div>
        <div class="recetas">
            <div class="d-flex justify-content-between">
                <div>
                    <label class="label-campo tamano-label">
                        <span class="nombre-campo">Insumo</span>
                        <select class="select-campo input-campo" asp-for="Receta.IdInsumo" asp-items="ViewBag.Insumo">
                            <option></option>
                        </select>
                        <div class="invalid-feedback">
                        </div>
                        <div class="valid-feedback">
                            ¡Todo bien!
                        </div>
                    </label>
                </div>
                <div>
                    <label class="label-campo">
                        <span class="nombre-campo">Cantidad</span>
                        <input class="input-campo" asp-for="Receta.CantInsumo" type="number">
                        <div class="invalid-feedback">
                            
                        </div>
                        <div class="valid-feedback">
                            ¡Todo bien!
                        </div>
                    </label>
                </div>

                <div class="form-group">
                    <button type="submit" asp-action="Create" asp-controller="Recetas" class="btn btn-primary botones-agregar"> Agregar Insumo </button>
                </div>
            </div>
            
            <div class="lista-recetas d-flex justify-content-between">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Receta.IdProducto" value="@ViewBag.Idproducto">
                @{
                    if (ViewBag.RecetasConInsumos == null)
                    {
                        <h4>No hay insumos de receta</h4>
                    }
                    else
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(Model=> Model.Receta.CantInsumo)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(Model => Model.Receta.IdInsumo)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(Model => Model.Receta.IdProducto)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var recetaConInsumo in (List<dynamic>)ViewBag.RecetasConInsumos)
                                {
                                    <tr>
                                        @if (recetaConInsumo.IdProducto == ViewBag.IdProducto)
                                        {
                                            <td>
                                                @recetaConInsumo.CantInsumo
                                            </td>
                                            <td>
                                                @recetaConInsumo.NomInsumo
                                            </td>

                                            <td>
                                            
                                                <a asp-action="Delete" asp-controller="Recetas" asp-route-id="@recetaConInsumo.IdReceta" asp-route-IdProducto="@ViewBag.IdProducto">Delete</a>
                                            </td>
                                        }

                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                }
            </div>
            <input type="submit" asp-action="Crear" asp-controller="Productos" class="botones-agregar " />
        </div>
    </form>

</div>

@*@-----VALIDACION DE CAMPOS EN TIEMPO REAL-----@*@
<script>
    $(document).ready(function () {

        // Manejar el evento de cambio en el campo de NomProducto
        $('#Producto_NomProducto').on('input', function () {
            validateNomProducto();
        });

        // Manejar el evento de cambio en el campo de PrecioVenta
        $('#Producto_PrecioVenta').on('input', function () {
            validatePrecioVenta();
        });

        // Manejar el evento de cambio en el campo de IdTamano
        $('#Producto_IdTamano').on('input', function () {
            validateTamano();
        });

        // Manejar el evento de cambio en el campo de IdCategoria
        $('#Producto_IdCategoria').on('change', function () {
            validateCategoria();
        });

        // Manejar el evento de cambio en el campo de CantInsumo
        $('#Receta_CantInsumo').on('input', function () {
            validateCantInsumo();
        });

        // Manejar el evento de cambio en el campo de IdInsumo
        $('#Receta_IdInsumo').on('change', function () {
            validateIdInsumo();
        });

        function validateNomProducto() {
            var maxCaracteres = 30;
            var minCaracteres = 4;
            var validacion = false;

            var NomProducto = $('#Producto_NomProducto').val();
            var contarNombre = NomProducto.length;

            if (contarNombre == 0) {
                validacion = true;
                mostrarError('Por favor ingrese un nombre al producto.');
            } else if (contarNombre < minCaracteres) {
                validacion = true;
                mostrarError('El nombre del producto debe tener al menos 4 caracteres.', '#Producto_NomProducto');
            } else if (contarNombre > maxCaracteres) {
                validacion = true;
                mostrarError('El nombre del producto no puede exceder los 30 caracteres.', '#Producto_NomProducto');
            }
            resultado(validacion, '#Producto_NomProducto');
            
        }

        

        function validatePrecioVenta() {
            var precio = $('#Producto_PrecioVenta').val();
            var minVenta = 100;
            var validacion = false;
            if(precio==0){
                validacion = true;
                mostrarError('Por favor ingrese un Precio', '#Producto_PrecioVenta');
            }
            else if(isNaN(precio)){
                validacion = true;
                mostrarError('Por favor ingrese un Precio', '#Producto_PrecioVenta');
            }else if(precio<minVenta){
                validacion = true;
                mostrarError('El presio minimo del producto debe ser 100 pesos', '#Producto_PrecioVenta');
            }
            resultado(validacion, '#Producto_PrecioVenta');

            

        }

        function validateCategoria() {
            var categoria = $('#Producto_IdCategoria').val();
            var idPizza = 1;
            var validacion = false;

            if (categoria == 0) {
                mostrarError('Por favor seleccione una categoria', '#Producto_IdCategoria');
                Ocultar_Campo_Oculto();
                validacion = true;
            } else if (categoria == idPizza) {
                Mostrar_Campo_Oculto();
                
            } else if (categoria != idPizza){
                Ocultar_Campo_Oculto();
            }

            resultado(validacion, '#Producto_IdCategoria');
        }
        function validateCantInsumo(){
            var cantInsumo = $('#Receta_CantInsumo').val();
            var validacion = false;
            if(cantInsumo==0){
                mostrarError('Por favor ponga una cantidad de insumo', '#Receta_CantInsumo');
                validacion = true;
            }else if ( isNaN(cantInsumo) ){
                mostrarError('Por favor ponga una cantidad de insumo', '#Receta_CantInsumo');
                validacion = true;
            }
            resultado(validacion, '#Receta_CantInsumo');

        }
        
        function validateIdInsumo(){
            var insumo = $('#Receta_IdInsumo').val();
            var validacion = false;
            if(insumo== 0){
                mostrarError('Por favor selecione un insumo', '#Receta_IdInsumo');
                validacion = true;
            }
            resultado(validacion, '#Receta_IdInsumo');

        }



        function Mostrar_Campo_Oculto() {
            $('#Tamano_Oculto').removeClass('d-none');
        }
        function Ocultar_Campo_Oculto() {
            $('#Tamano_Oculto').addClass('d-none');
        }

        function resultado(validacion, item){
            if (validacion) {
                $(item).addClass('is-invalid'); // Agregar clase de error
                $(item).removeClass('is-valid'); // Remover clase de válido
            } else {
                $(item).removeClass('is-invalid'); // Remover clase de error
                $(item).addClass('is-valid'); // Agregar clase de válido
            }
        }
        function mostrarError(mensaje, item) {
            var errorFeedback = $(item).siblings('.invalid-feedback');
            errorFeedback.text(mensaje);
        }

        

    });
</script>

<script>
     const inputs = document.querySelectorAll('.input-campo');
     inputs.forEach( input => {
         input.onfocus = ( ) => {
             input.previousElementSibling.classList.add('top')  
             input.previousElementSibling.classList.add('focus')  
             input.parentNode.classList.add('focus')  
             
         }
        input.onblur = () => {
            input.value = input.value.trim();
            if (input.value.trim().length == 0){
                input.previousElementSibling.classList.remove('top')
            }
            input.previousElementSibling.classList.remove('focus')
            input.parentNode.classList.remove('focus')  

        }
     })
</script>

<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

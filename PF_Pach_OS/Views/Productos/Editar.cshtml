@model PF_Pach_OS.Models.CreateViewModel

@{
    ViewData["Title"] = "Actualizar";
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

}
<link href="~/css/productos.css" rel="stylesheet" />

<div class="row pl-2 pt-2">

    <div class="col-4 ml-3 p-2 bg-white rounded border px-4 py-4">
        <form method="post" novalidate id="formulario1">
            <h2>Producto</h2>
            <hr>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Producto.IdProducto" value="@ViewBag.IdProducto" />
            <div class="form-group">
                <label class="form-label">Producto</label>
                @if (ViewBag.ProductoActivo == null)
                {
                    <input asp-for="Producto.NomProducto" class="form-control" title=" " required />
                }
                else
                {
                    <input asp-for="Producto.NomProducto" value="@ViewBag.ProductoActivo.NomProducto" class="form-control" title=" " required />
                }
                <div class="invalid-feedback"></div>

            </div>

            <div class="form-group">
                <label asp-for="Producto.PrecioVenta" class="form-label">Precio</label>

                @if (ViewBag.ProductoActivo == null)
                {
                    <input asp-for="Producto.PrecioVenta" class="form-control" title=" " required />

                }
                else
                {
                    <input asp-for="Producto.PrecioVenta" value="@ViewBag.ProductoActivo.PrecioVenta" class="form-control" required />

                }
                <div class="invalid-feedback"></div>

            </div>

            <div class="form-group">
                <label asp-for="Producto.IdCategoria" class="form-label">Categoria</label>
                <select class="form-select" id="Producto_IdCategoria" asp-for="Producto.IdCategoria" asp-items="ViewBag.IdCategoria" required>
                    @if (ViewBag.SelectCategoriaID == null)
                    {
                        <option disabled selected>Seleccione una categoria</option>

                    }
                    else
                    {
                        <option value="@ViewBag.SelectCategoriaID">@ViewBag.SelectCategoria</option>

                    }
                </select>

                <div class="invalid-feedback"></div>
                <div class="valid-feedback">¡Todo bien!</div>
            </div>

            <div id="Tamano_Oculto" class="d-none form-group">
                <label asp-for="Producto.IdTamano" class="form-label">Tamaño</label>
                <select class="form-select" asp-for="Producto.IdTamano" asp-items="ViewBag.IdTamano">
                    @if (ViewBag.SelectTamanoID == null)
                    {
                        <option disabled selected>Seleccione un Tamaño</option>

                    }
                    else
                    {
                        <option value="@ViewBag.SelectTamanoID">@ViewBag.SelectTamano</option>

                    }
                </select>

                <div class="invalid-feedback">Selecione un tamaño por favor.</div>

            </div>
            <div class="col">
                <input type="submit" asp-action="Actualizar" asp-controller="Productos" class="col-6 botones-agregar btn btn-success w-auto" value="Terminar Producto" />
                <a asp-action="Index" asp-controller="Productos" class="col-6 btn btn-outline-danger">Cancelar</a>
            </div>
        </form>


    </div>
    <div class="col-6 mr-2 ml-5 mt-4">
        <div>
            <h2>Receta</h2>

            <form id="miFormulario" class="row" novalidate>

                <div class="col-6">
                    <select class="form-control" asp-for="Receta.IdInsumo" required>
                        <option disabled selected>Seleccione un insumo</option>
                        @foreach (var insu in ViewBag.Insumo)
                        {
                            <option value="@insu.IdInsumo"> @insu.NomInsumo/@insu.Medida </option>
                        }
                    </select>
                    <div class="invalid-feedback"></div>

                </div>

                <div class="col-3">
                    <input class="input-campo form-control" asp-for="Receta.CantInsumo" type="number" placeholder="Cantidad" required>
                    <div class="invalid-feedback"></div>

                </div>

                <div class="col-3">
                    <button type="submit" class="form-control btn btn-primary botones-agregar"> Agregar </button>
                </div>
            </form>
        </div>
        <div class="mt-4 border rounded bg-white">



            @if (ViewBag.RecetasConInsumos == null)
            {
                <h4>No hay insumos de receta</h4>
            }
            else
            {
                <table id="miTabla" class="table table-borderless mb-0">
                    <thead>
                        <tr class="text-gray bg-gray-300">
                            <th>Insumo</th>
                            <th>Cantidad</th>
                            <th>Medida</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="Tabla1">
                        @foreach (var recetaConInsumo in ViewBag.RecetasConInsumos)
                        {
                            <tr>
                                <td class="d-none">@recetaConInsumo.IdInsumo </td>
                                <td>@recetaConInsumo.NomInsumo</td>
                                <td id="CantInsumo">@recetaConInsumo.CantInsumo</td>
                                <td>@recetaConInsumo.Medida</td>
                                <td>
                                    <a asp-action="Eliminar" asp-controller="Recetas" asp-route-id="@recetaConInsumo.IdReceta" asp-route-IdProducto="@ViewBag.IdProducto" class="btn btn-outline-danger">Remover</a>
                                </td>
                            </tr>


                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>


<script>
    var Insumo = [];
    document.getElementById("miFormulario").addEventListener("submit", function (event) {
        event.preventDefault(); // Evita que se envíe el formulario
        // Captura los valores del formulario
        var campo_idInsumo = $('#Receta_IdInsumo').val()
        var campo_cantidadInsumo = $('#Receta_CantInsumo').val()
        var idInsumo_Input = parseInt(campo_idInsumo);
        var cantidadInsumo = parseInt(campo_cantidadInsumo);

        var encontrado = false;
        var NoExiste = false;
        console.log(cantidadInsumo)
        console.log(idInsumo_Input)


        // Realiza la actualización visual de la tabla
        var filas = document.querySelectorAll("#Tabla1 tr");
        filas.forEach(function (fila) {
            var Idinsumo_tabla = parseInt(fila.cells[0].textContent);
            if (idInsumo_Input == Idinsumo_tabla) {
                var Cantidad_Existente = parseInt(fila.cells[2].textContent);
                console.log(Cantidad_Existente)
                var total = Cantidad_Existente + cantidadInsumo;
                fila.querySelector("#CantInsumo").textContent = total;
                encontrado = true;
            }
        });
        if (!encontrado) {
            NoExiste = true;
        }
        if (NoExiste) {
            $.ajax({
                url: '/Productos/ConsultarNomInsumo',
                type: 'GET',
                data: { Idinsumo: idInsumo_Input },
                success: function (data) {
                    var Insumo = data[0];
                    console.log(Insumo)
                    
                    if (typeof Insumo !== 'undefined' && Insumo !== null) {
                        var tabla = document.getElementById("miTabla").getElementsByTagName('tbody')[0];
                        var nuevaFila = tabla.insertRow(tabla.rows.length);
                        var idInsumo = nuevaFila.insertCell(0);
                        var nomInsumo = nuevaFila.insertCell(1);
                        var cantInsumo = nuevaFila.insertCell(2);
                        var medida = nuevaFila.insertCell(3);
                        var acciones = nuevaFila.insertCell(4);

                        idInsumo.classList.add('d-none');
                        idInsumo.innerHTML = Insumo.idInsumo;
                        nomInsumo.innerHTML = Insumo.nomInsumo;
                        cantInsumo.id = 'CantInsumo';
                        cantInsumo.innerHTML = cantidadInsumo;
                        medida.innerHTML = Insumo.medida;

                        var enlace = document.createElement('a');
                        enlace.href = '/Recetas/';
                        enlace.className = 'btn btn-outline-danger';
                        enlace.textContent = 'Remover';
                        acciones.appendChild(enlace);
                    } else {
                        console.log("Insumo es undefined o nulo.");
                    }
                },
                error: function (xhr, status, error) {
                    reject(error);
                }

            });
            
        }

    });
    function Agregar_a_la_lista(objetoJSON) {
        Insumo.push(objetoJSON);
        console.log(Insumo);
    }
</script>


@*@-----VALIDACION DE CAMPOS EN TIEMPO REAL-----@*@
<script>
    $(document).ready(function () {

        var categoria = $('#Producto_IdCategoria').val();
        var idPizza = 1;
        if (categoria == idPizza) {
            Mostrar_Campo_Oculto();

        } else if (categoria != idPizza) {
            Ocultar_Campo_Oculto();
        }

        $('#Producto_NomProducto').on('input', function () {
            validateNomProducto();
            var id = $('#Producto_IdProducto').val();
            console.log(id)
        });

        // Manejar el evento de cambio en el campo de PrecioVenta
        $('#Producto_PrecioVenta').on('input', function () {
            validatePrecioVenta();
        });

        // Manejar el evento de cambio en el campo de IdTamano
        $('#Producto_IdTamano').on('input', function () {
            validateTamano();
        });

        // Manejar el evento de cambio en el campo de IdCategoria
        $('#Producto_IdCategoria').on('change', function () {
            validateCategoria();
        });

        // Manejar el evento de cambio en el campo de CantInsumo
        $('#Receta_CantInsumo').on('input', function () {
            validateCantInsumo();
        });

        // Manejar el evento de cambio en el campo de IdInsumo
        $('#Receta_IdInsumo').on('change', function () {
            validateIdInsumo();
        });

        function validateNomProducto() {
            var maxCaracteres = 30;
            var minCaracteres = 4;
            var validacion = false;

            var NomProducto = $('#Producto_NomProducto').val();
            var contarNombre = NomProducto.length;

            console.log(NomProducto)
            if (contarNombre == 0) {
                validacion = true;
                mostrarError('Por favor ingrese un nombre al producto.');
            } else if (contarNombre < minCaracteres) {
                validacion = true;
                mostrarError('El nombre del producto debe tener al menos 4 caracteres.', '#Producto_NomProducto');
            } else if (contarNombre > maxCaracteres) {
                validacion = true;
                mostrarError('El nombre del producto no puede exceder los 30 caracteres.', '#Producto_NomProducto');
            }
            resultado(validacion, '#Producto_NomProducto');

        }



        function validatePrecioVenta() {
            var precio = $('#Producto_PrecioVenta').val();
            var minVenta = 100;
            var validacion = false;

            if (precio == 0) {
                validacion = true;
                mostrarError('Por favor ingrese un Precio', '#Producto_PrecioVenta');
            }
            else if (isNaN(precio)) {
                validacion = true;
                mostrarError('Por favor ingrese un Precio', '#Producto_PrecioVenta');
            } else if (precio < minVenta) {
                validacion = true;
                mostrarError('El presio minimo del producto debe ser 100 pesos', '#Producto_PrecioVenta');
            }
            resultado(validacion, '#Producto_PrecioVenta');



        }

        function validateCategoria() {
            var categoria = $('#Producto_IdCategoria').val();
            var idPizza = 1;
            var validacion = false;

            if (categoria == 0) {
                mostrarError('Por favor seleccione una categoria', '#Producto_IdCategoria');
                Ocultar_Campo_Oculto();
                validacion = true;
            } else if (categoria == idPizza) {
                Mostrar_Campo_Oculto();

            } else if (categoria != idPizza) {
                Ocultar_Campo_Oculto();
            }

            resultado(validacion, '#Producto_IdCategoria');
        }
        function validateCantInsumo() {
            var cantInsumo = $('#Receta_CantInsumo').val();
            var validacion = false;
            if (cantInsumo == 0) {
                mostrarError('Por favor ponga una cantidad de insumo', '#Receta_CantInsumo');
                validacion = true;
            } else if (isNaN(cantInsumo)) {
                mostrarError('Por favor ponga una cantidad de insumo', '#Receta_CantInsumo');
                validacion = true;
            }
            resultado(validacion, '#Receta_CantInsumo');

        }

        function validateIdInsumo() {
            var insumo = $('#Receta_IdInsumo').val();
            var validacion = false;
            if (insumo == 0) {
                mostrarError('Por favor selecione un insumo', '#Receta_IdInsumo');
                validacion = true;
            }

            resultado(validacion, '#Receta_IdInsumo');

        }



        function Mostrar_Campo_Oculto() {
            $('#Tamano_Oculto').removeClass('d-none');
        }
        function Ocultar_Campo_Oculto() {
            $('#Tamano_Oculto').addClass('d-none');
        }

        function resultado(validacion, item) {
            if (validacion) {
                $(item).addClass('is-invalid'); // Agregar clase de error
                $(item).removeClass('is-valid'); // Remover clase de válido
            } else {
                $(item).removeClass('is-invalid'); // Remover clase de error
                $(item).addClass('is-valid'); // Agregar clase de válido
            }
        }
        function mostrarError(mensaje, item) {
            var errorFeedback = $(item).siblings('.invalid-feedback');
            errorFeedback.text(mensaje);
        }



    });
</script>



<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
